
class Solution {
    // Non-static method, so you need to call it on an instance of the class
    public void nearlySorted(int[] arr, int k) {
        // code
         PriorityQueue<Integer> minHeap = new PriorityQueue<>();
        
        // Add first k+1 elements to the heap
        for (int i = 0; i <= k && i < arr.length; i++) {
            minHeap.add(arr[i]);
        }
        
        // Index to place the next sorted element
        int index = 0;
        
        // Process the rest of the array
        for (int i = k + 1; i < arr.length; i++) {
            // Add the current element to the heap
            minHeap.add(arr[i]);
            
            // Pop the smallest element from the heap and place it in the result
            arr[index++] = minHeap.poll();
        }
        
        // Pop the remaining elements from the heap and place them in the result
        while (!minHeap.isEmpty()) {
            arr[index++] = minHeap.poll();
        }
    }
}
